class Solution
{
    public:
    void sort012(int a[], int n)
    {
        // code here;
        // Method 1
        // O(NlogN), O(1)
        // sort(a,a+n);
        
        // Method 2
        // O(N)+O(N), O(1)
        // int cnt1 = 0, cnt2 = 0, cnt0 = 0;
        // for(int i=0;i<n;i++) {
        //     if(a[i]==0) cnt0++;
        //     else if(a[i]==1) cnt1++;
        //     else if(a[i]==2) cnt2++;
        // }
        // for(int i=0;i<n;i++) {
        //     if(cnt0) a[i]=0,cnt0--;
        //     else if(cnt1) a[i]=1,cnt1--;
        //     else if(cnt2) a[i]=2,cnt2--;
        // }
        
        // 3 Pointers Method
        // O(N), O(1)
        int low = 0, mid = 0, high = n-1;
        while(mid<=high) {
            switch(a[mid]) {
                case 0:
                    swap(a[low++],a[mid++]);
                    break;
                case 1:
                    mid++;
                    break;
                case 2:
                    swap(a[mid],a[high--]);
                    break;
            }
        }
    }
    
};
